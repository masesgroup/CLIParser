# This is a basic workflow to help you get started with Actions

name: CI_PULLREQUEST

# Controls when the action will run. Triggers the workflow on pull request
# events but only for the master branch
on:
  pull_request:
    branches: [ master ]

jobs:
  # This workflow contains a single job called "build_release"
  build_pullrequest:
    # The type of runner that the job will run on
    runs-on: windows-2022
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      # Support longpaths
      - name: Support long paths
        run: git config --system core.longpaths true
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it                                                                                  
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - uses: nuget/setup-nuget@v1
        with:
          nuget-version: '5.x'
      - run: nuget restore src\net\CLIParser.sln
      
      - name: Compile 
        run: dotnet build --no-incremental --configuration Release /p:Platform="Any CPU" tests\CLIParserTest.sln

      - name: Test 
        run: |
          dotnet run --framework net461 --project tests\CLIParserTest\CLIParserTest.csproj
          dotnet run --framework net6.0 --project tests\CLIParserTest\CLIParserTest.csproj
          dotnet run --framework net5.0 --project tests\CLIParserTest\CLIParserTest.csproj
          dotnet run --framework netcoreapp3.1 --project tests\CLIParserTest\CLIParserTest.csproj

      - name: Create Release
        run: dotnet build --no-incremental --configuration Release /p:Platform="Any CPU" src\CLIParser.sln
        
      - name: Clear documentation folder 
        run: Remove-Item .\docs\* -Recurse -Force -Exclude _config.yml,CNAME

      - name: Build documentation
        run: |
          choco install docfx
          cd src\documentation
          docfx
